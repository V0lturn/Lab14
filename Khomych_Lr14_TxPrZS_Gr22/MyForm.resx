<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>